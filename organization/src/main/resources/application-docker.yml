server:
  port: ${ORGANIZATION_PORT}
  servlet:
    context-path: /

logging:
  level:
    com.ryazancev.organization.kafka.OrganizationProducerService: debug
    com.ryazancev.organization.kafka.OrganizationMessageListener: debug
    com.ryazancev.organization.util.exception.OrganizationExceptionHandler: debug

spring:
  config:
    import: classpath:openapi/open-api-config.yml
  messages:
    always-use-message-format: false
    fallback-to-system-locale: true
    encoding: UTF-8
    basename: messages/messages
  application:
    name: organization

  #Kafka
  kafka:
    bootstrap-servers: kafka:9092
    topic:
      admin: ${KAFKA_REQUESTS_ADMIN_TOPIC}
      organization:
        register: ${KAFKA_REGISTER_ORGANIZATION_TOPIC}
        change-status: ${KAFKA_CHANGE_STATUS_ORGANIZATION_TOPIC}
      product: ${KAFKA_DELETE_PRODUCT_TOPIC}
      mail: ${KAFKA_MAIL_TOPIC}
      notification: ${KAFKA_NOTIFICATION_TOPIC}
    consumer:
      group-id: ${KAFKA_ORGANIZATION_GROUP}

  #PostgreSQL connection
  datasource:
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    url: jdbc:postgresql://postgres:5432/${POSTGRES_ORGANIZATION_DATABASE}?currentSchema=${POSTGRES_ORGANIZATION_SCHEMA}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true

  #Redis
  cache:
    type: redis
    cache-names: redis-cache
  data:
    redis:
      host: redis
      port: 6379
      password: ${REDIS_PASSWORD}

  #Liquibase
  liquibase:
    change-log: classpath:liquibase/db.changelog.yaml
    enabled: true

#Zipkin
management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans

  #Actuator Endpoint
  endpoints:
    web:
      exposure:
        include: "*"
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true

#Resilience4j
resilience4j:
  circuitbreaker:
    instances:
      organization:
        sliding-window-type: COUNT_BASED
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        register-health-indicator: true

#Eureka
eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka
    fetch-registry: true
    register-with-eureka: true

#OpenApi
openapi:
  service:
    url: http://localhost:8080
springdoc:
  api-docs:
    path: /v3/api-docs/organization
  swagger-ui:
    path: /swagger-ui.html/organization