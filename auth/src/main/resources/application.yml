server:
  port: ${AUTH_PORT}
  servlet:
    context-path: /

spring:
  profiles:
    active: default
  config:
    import: classpath:openapi/open-api-config.yml
  application:
    name: auth

  #Kafka
  kafka:
    bootstrap-servers: localhost:29092
    consumer:
      group-id: ${KAFKA_AUTH_GROUP}
    topic:
      mail: ${KAFKA_MAIL_TOPIC}
      user:
        update: ${KAFKA_UPDATE_USER_TOPIC}
        toggle-lock: ${KAFKA_TOGGLE_LOCK_USER_TOPIC}
        delete: ${KAFKA_DELETE_USER_TOPIC}

  #MariaDB connection
  datasource:
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
    url: jdbc:mariadb://localhost:3306/${MYSQL_AUTH_DATABASE}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect
        format_sql: true
    show-sql: true

  #Liquibase
  liquibase:
    change-log: classpath:liquibase/db.changelog.yml
    enabled: true

#Security
security:
  jwt:
    access: ${JWT_ACCESS}
    refresh: ${JWT_REFRESH}
    secret: ${JWT_SECRET}
    confirmation_link_prefix: ${SECURITY_CONFIRMATION_LINK_PREFIX}

#Zipkin
management:
  tracing:
    sampling:
      probability: 1.0

  #Actuator Prometheus Endpoint
  endpoints:
    web:
      exposure:
        include: "*"
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true

#Resilience4j
resilience4j:
  circuitbreaker:
    instances:
      customer:
        sliding-window-type: COUNT_BASED
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        register-health-indicator: true

#Eureka
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true


#OpenApi
openapi:
  service:
    url: http://localhost:8080
springdoc:
  api-docs:
    path: /v3/api-docs/auth
  swagger-ui:
    path: /swagger-ui.html/auth

