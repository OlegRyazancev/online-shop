version: '3'

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "5432:5432"
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    networks:
      - online-shop
    volumes:
      - postgres:/data/postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8.2
    ports:
      - "5050:80"
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    depends_on:
      - postgres
    networks:
      - online-shop
    volumes:
      - pgadmin:/var/lib/pgadmin

  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - "27017:27017"
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - online-shop
    volumes:
      - mongodb:/data/db

  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    ports:
      - "8081:8081"
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGOEXPRESS_LOGIN}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGOEXPRESS_PASSWORD}
    depends_on:
      - mongodb
    networks:
      - online-shop

  mariadb:
    container_name: mariadb
    image: mariadb:11.2.2
    ports:
      - "3306:3306"
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - online-shop
    volumes:
      - mysql:/var/lib/mysql

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin:5.2.1
    ports:
      - "8079:80"
    restart: unless-stopped
    environment:
      PMA_HOST: ${MYSQL_PMA_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - mariadb
    networks:
      - online-shop

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    restart: unless-stopped
    networks:
      - online-shop


  minio:
    container_name: minio
    image: minio/minio:latest
    ports:
      - "9090:9090"
      - "9000:9000"
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server ~/minio --console-address :9090
    networks:
      - online-shop
    volumes:
      - minio_data:/minio

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "22181:2181"
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - online-shop

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "29092:29092"
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - online-shop

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9093:8080"
    restart: unless-stopped
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: online-shop-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
    networks:
      - online-shop

  redis:
    container_name: redis
    image: redis:7.2.4-alpine
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    networks:
      - online-shop
    volumes:
      - redis:/data

  redisinsight:
    container_name: redis-insight
    image: redislabs/redisinsight:1.14.0
    ports:
      - "8001:8001"
    networks:
      - online-shop

  #Prometheus and grafana

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.45.3
    ports:
      - "9089:9090"
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - eureka-server
      - api-gateway
      - admin
      - auth
      - customer
      - logo
      - mail
      - organization
      - product
      - purchase
      - review
    networks:
      - online-shop

  grafana:
    container_name: grafana
    image: grafana/grafana:10.2.4
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    links:
      - prometheus:prometheus
    volumes:
      - grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - online-shop

networks:
  online-shop:
    driver: bridge

volumes:
  redis:
  minio_data:
  mysql:
  postgres:
  pgadmin:
  mongodb:
  grafana:
